import discord
from discord.ext import commands, tasks
import os
import asyncio
import json
from dotenv import load_dotenv
from datetime import datetime
import pytz

# ===== –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è .env =====
CONFIG_DIR = "config"
os.makedirs(CONFIG_DIR, exist_ok=True)

load_dotenv(os.path.join(CONFIG_DIR, ".env.siege"))

TOKEN = os.getenv("DISCORD_TOKEN_SIEGE")
SIEGE_GUILD_ID = int(os.getenv("SIEGE_GUILD_ID", "0"))

if not TOKEN or not SIEGE_GUILD_ID:
    raise ValueError("‚ùå –ü–µ—Ä–µ–≤—ñ—Ä DISCORD_TOKEN_SIEGE —ñ SIEGE_GUILD_ID —É .env.siege")

# ===== –°—Ç–∞—Ç—É—Å–∏ –∑ JSON =====
STATUS_FILE = os.path.join(CONFIG_DIR, "status_phrases.json")

def load_statuses():
    try:
        with open(STATUS_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
            if not isinstance(data, dict):
                raise ValueError
            return data
    except Exception:
        return {
            "day": ["–ì—Ä–∞—î —É –æ–±–ª–æ–≥—É", "–ì—Ä–∞—î —É –ø—ñ–¥–≥–æ—Ç–æ–≤–∫—É –¥–æ –≤—ñ–π–Ω–∏"],
            "night": ["–ì—Ä–∞—î —É –Ω—ñ—á–Ω–∏–π —Ä–µ–π–¥", "–ì—Ä–∞—î —É —Ç–µ–º–Ω—ñ –±–∏—Ç–≤–∏"]
        }

status_phrases = load_statuses()

# ===== –Ü–Ω—Ç–µ–Ω—Ç–∏ =====
intents = discord.Intents.default()
intents.members = True
intents.message_content = True
intents.guilds = True

bot = commands.Bot(command_prefix="!", intents=intents)

# ===== –¶–∏–∫–ª —Å—Ç–∞—Ç—É—Å—ñ–≤ =====
@tasks.loop(minutes=5)
async def change_status():
    tz = pytz.timezone("Europe/London")
    hour = datetime.now(tz).hour
    mode = "day" if 8 <= hour < 23 else "night"

    phrases = status_phrases.get(mode, [])
    if not phrases:
        phrases = ["–ì—Ä–∞—î —É Silent Siege"]

    phrase = phrases[datetime.now().second % len(phrases)]
    await bot.change_presence(activity=discord.Game(name=phrase))

# ===== –ü–æ–¥—ñ—ó =====
@bot.event
async def on_ready():
    print(f"‚úÖ –£–≤—ñ–π—à–æ–≤ —è–∫ {bot.user} (ID: {bot.user.id})")
    try:
        guild = discord.Object(id=SIEGE_GUILD_ID)
        synced = await bot.tree.sync(guild=guild)  # –ª–æ–∫–∞–ª—å–Ω–∞ —Å–∏–Ω—Ö—Ä–∞ —Ç—ñ–ª—å–∫–∏ –¥–ª—è —Ü—å–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
        print(f"üåê –°–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–æ–≤–∞–Ω–æ {len(synced)} –∫–æ–º–∞–Ω–¥ –¥–ª—è –≥—ñ–ª—å–¥—ñ—ó {SIEGE_GUILD_ID}")
    except Exception as e:
        print(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω—ñ–∑–∞—Ü—ñ—ó: {e}")

    change_status.start()  # –∑–∞–ø—É—Å–∫–∞—î–º–æ —Å—Ç–∞—Ç—É—Å–∏

# ===== –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–æ–≥—ñ–≤ =====
async def load_cogs():
    try:
        await bot.load_extension("cogs.siege_cog")
        print("‚öîÔ∏è Cog siege_cog –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ")
    except Exception as e:
        print(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ siege_cog: {e}")

async def main():
    async with bot:
        await load_cogs()
        await bot.start(TOKEN)

if __name__ == "__main__":
    asyncio.run(main())